{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "service API",
    "version" : "1.0.0-SNAPSHOT"
  },
  "tags" : [ {
    "name" : "Client API",
    "description" : "API for clients"
  }, {
    "name" : "Feature Toggle API",
    "description" : "API for managing feature toggles"
  } ],
  "paths" : {
    "/client/feature-toggles/{context}" : {
      "get" : {
        "tags" : [ "Client API" ],
        "summary" : "Get all active features for a given context",
        "operationId" : "getAllActiveFeaturesForContext",
        "parameters" : [ {
          "name" : "context",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of active feature names",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid api-key"
          }
        },
        "security" : [ {
          "APIKEY" : [ ]
        } ]
      }
    },
    "/feature-toggles" : {
      "get" : {
        "tags" : [ "Feature Toggle API" ],
        "summary" : "Get all feature toggles",
        "operationId" : "getAll",
        "responses" : {
          "200" : {
            "description" : "A list of all feature toggles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FeatureToggleResponse"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "JWT" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Feature Toggle API" ],
        "summary" : "Create a new feature toggle",
        "operationId" : "create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateFeatureToggleRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Feature toggle created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeatureToggleResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "JWT" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Feature Toggle API" ],
        "summary" : "Delete all feature toggles",
        "operationId" : "deleteAll",
        "responses" : {
          "200" : {
            "description" : "All feature toggles deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unit"
                }
              }
            }
          }
        },
        "security" : [ {
          "JWT" : [ ]
        } ]
      }
    },
    "/feature-toggles/{id}" : {
      "get" : {
        "tags" : [ "Feature Toggle API" ],
        "summary" : "Get a feature toggle by ID",
        "operationId" : "getById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A single feature toggle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeatureToggleResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Feature toggle not found"
          }
        },
        "security" : [ {
          "JWT" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Feature Toggle API" ],
        "summary" : "Delete a feature toggle by ID",
        "operationId" : "deleteById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Feature toggle deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unit"
                }
              }
            }
          },
          "404" : {
            "description" : "Feature toggle not found"
          }
        },
        "security" : [ {
          "JWT" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Feature Toggle API" ],
        "summary" : "Partially update a feature toggle by ID",
        "operationId" : "partialUpdate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FeatureToggleUpdateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Feature toggle updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeatureToggleResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Feature toggle not found"
          }
        },
        "security" : [ {
          "JWT" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ContextApiModel" : {
        "required" : [ "key" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          }
        }
      },
      "CreateFeatureToggleRequest" : {
        "required" : [ "key", "name", "description" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "FeatureToggleResponse" : {
        "required" : [ "key", "name", "description", "contexts" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "contexts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContextApiModel"
            }
          }
        }
      },
      "FeatureToggleUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "contexts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContextApiModel"
            },
            "nullable" : true
          }
        }
      },
      "Unit" : {
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "APIKEY" : {
        "type" : "apiKey",
        "name" : "x-api-key",
        "in" : "header"
      },
      "JWT" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "SecurityScheme" : {
        "type" : "openIdConnect",
        "description" : "Authentication",
        "openIdConnectUrl" : "http://localhost:8000/realms/simple-feature-toggles/.well-known/openid-configuration"
      }
    }
  }
}
