---
openapi: 3.1.0
tags:
  - name: Api-Key API
    description: API for managing api keys
  - name: Client API
    description: API for clients
  - name: Environment API
    description: API for managing environments
  - name: Feature-Toggle API
    description: API for managing feature-toggles
components:
  securitySchemes:
    APIKEY:
      type: apiKey
      name: x-api-key
      in: header
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    SecurityScheme:
      type: openIdConnect
      description: Authentication
      openIdConnectUrl: http://localhost:8000/realms/simple-feature-toggles/.well-known/openid-configuration
  schemas:
    ApiKeyResponse:
      type: object
      required:
        - name
        - secret
        - environmentActivations
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        secret:
          type: string
        environmentActivations:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentActivationApiModel"
    CreateApiKeyRequest:
      type: object
      required:
        - name
        - environmentActivations
      properties:
        name:
          type: string
        environmentActivations:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentActivationApiModel"
    CreateEnvironmentRequest:
      type: object
      required:
        - key
        - name
      properties:
        key:
          type: string
        name:
          type: string
    CreateFeatureToggleRequest:
      type: object
      required:
        - key
        - name
        - description
        - environmentActivations
      properties:
        key:
          type: string
        name:
          type: string
        description:
          type: string
        environmentActivations:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentActivationApiModel"
    EnvironmentActivationApiModel:
      type: object
      required:
        - environmentKey
      properties:
        environmentKey:
          type: string
        activated:
          type: boolean
    EnvironmentApiResponse:
      type: object
      required:
        - key
        - name
      properties:
        id:
          type: integer
          format: int64
        key:
          type: string
        name:
          type: string
    FeatureToggleResponse:
      type: object
      required:
        - key
        - name
        - description
        - environmentActivations
      properties:
        id:
          type: integer
          format: int64
        key:
          type: string
        name:
          type: string
        description:
          type: string
        environmentActivations:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentActivationApiModel"
    UpdateApiKeyRequest:
      type: object
      properties:
        name:
          type:
            - string
            - "null"
        environmentActivations:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/EnvironmentActivationApiModel"
    UpdateEnvironmentRequest:
      type: object
      properties:
        name:
          type:
            - string
            - "null"
    UpdateFeatureToggleRequest:
      type: object
      properties:
        name:
          type:
            - string
            - "null"
        description:
          type:
            - string
            - "null"
        environmentActivations:
          type:
            - array
            - "null"
          items:
            $ref: "#/components/schemas/EnvironmentActivationApiModel"
paths:
  /api-keys:
    get:
      summary: Get all api keys
      operationId: getAll
      tags:
        - Api-Key API
      responses:
        "200":
          description: A list of all api keys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiKeyResponse"
      security:
        - JWT: [ ]
    delete:
      summary: Delete all api keys
      operationId: deleteAll
      tags:
        - Api-Key API
      responses:
        "204":
          description: All api keys deleted
      security:
        - JWT: [ ]
    post:
      summary: Create a new api key
      operationId: create
      tags:
        - Api-Key API
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateApiKeyRequest"
        required: true
      responses:
        "200":
          description: api key created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        "400":
          description: Invalid input
      security:
        - JWT: [ ]
  /api-keys/{id}:
    patch:
      summary: Partially update an api key by ID
      operationId: partialUpdate
      tags:
        - Api-Key API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateApiKeyRequest"
        required: true
      responses:
        "200":
          description: api key updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureToggleResponse"
        "400":
          description: Invalid input
        "404":
          description: api key not found
      security:
        - JWT: [ ]
    get:
      summary: Get an api key by ID
      operationId: getById
      tags:
        - Api-Key API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A single api key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        "404":
          description: api key not found
      security:
        - JWT: [ ]
    delete:
      summary: Delete an api key by ID
      operationId: deleteById
      tags:
        - Api-Key API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: api key deleted
        "404":
          description: api key not found
      security:
        - JWT: [ ]
  /client/feature-toggles:
    get:
      summary: Get all active features for a given context
      operationId: getAllActiveFeaturesForContext
      tags:
        - Client API
      parameters:
        - name: environment
          in: query
          schema:
            type: string
          required: true
      responses:
        "200":
          description: A list of active feature names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Invalid api-key
      security:
        - APIKEY: [ ]
  /environments:
    get:
      summary: Get all environments
      operationId: getAll
      tags:
        - Environment API
      responses:
        "200":
          description: A list of all environments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EnvironmentApiResponse"
      security:
        - JWT: [ ]
    delete:
      summary: Delete all environments
      operationId: deleteAll
      tags:
        - Environment API
      responses:
        "204":
          description: All environments deleted
      security:
        - JWT: [ ]
    post:
      summary: Create a new environment
      operationId: create
      tags:
        - Environment API
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEnvironmentRequest"
        required: true
      responses:
        "200":
          description: environment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentApiResponse"
        "400":
          description: Invalid input
      security:
        - JWT: [ ]
  /environments/{id}:
    patch:
      summary: Partially update an environment by ID
      operationId: partialUpdate
      tags:
        - Environment API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEnvironmentRequest"
        required: true
      responses:
        "200":
          description: environment updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentApiResponse"
        "400":
          description: Invalid input
        "404":
          description: environment not found
      security:
        - JWT: [ ]
    get:
      summary: Get an environment by ID
      operationId: getById
      tags:
        - Environment API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A single environment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentApiResponse"
        "404":
          description: environment not found
      security:
        - JWT: [ ]
    delete:
      summary: Delete an environment by ID
      operationId: deleteById
      tags:
        - Environment API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: environment deleted
        "404":
          description: environment not found
      security:
        - JWT: [ ]
  /feature-toggles:
    get:
      summary: Get all feature-toggles
      operationId: getAll
      tags:
        - Feature-Toggle API
      responses:
        "200":
          description: A list of all feature-toggles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeatureToggleResponse"
      security:
        - JWT: [ ]
    delete:
      summary: Delete all feature-toggles
      operationId: deleteAll
      tags:
        - Feature-Toggle API
      responses:
        "204":
          description: All feature-toggles deleted
      security:
        - JWT: [ ]
    post:
      summary: Create a new feature toggle
      operationId: create
      tags:
        - Feature-Toggle API
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFeatureToggleRequest"
        required: true
      responses:
        "200":
          description: Feature toggle created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureToggleResponse"
        "400":
          description: Invalid input
      security:
        - JWT: [ ]
  /feature-toggles/{id}:
    patch:
      summary: Partially update a feature toggle by ID
      operationId: partialUpdate
      tags:
        - Feature-Toggle API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFeatureToggleRequest"
        required: true
      responses:
        "200":
          description: Feature toggle updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureToggleResponse"
        "400":
          description: Invalid input
        "404":
          description: Feature toggle not found
      security:
        - JWT: [ ]
    get:
      summary: Get a feature toggle by ID
      operationId: getById
      tags:
        - Feature-Toggle API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A single feature toggle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureToggleResponse"
        "404":
          description: Feature toggle not found
      security:
        - JWT: [ ]
    delete:
      summary: Delete a feature toggle by ID
      operationId: deleteById
      tags:
        - Feature-Toggle API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Feature toggle deleted
        "404":
          description: Feature toggle not found
      security:
        - JWT: [ ]
info:
  title: service API
  version: 1.0.0
