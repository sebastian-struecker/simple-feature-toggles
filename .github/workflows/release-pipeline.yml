name: Release Pipeline

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  packages: write
  id-token: write
  security-events: write
  pages: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get npm version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Set version output
        id: set-version-output
        run: |
          echo "RELEASE_VERSION=${{ steps.package-version.outputs.current-version }}" >> $GITHUB_ENV

  service-build:
    runs-on: ubuntu-latest
    needs: [get-version]
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Maven Package
        working-directory: ./service
        run: ./mvnw -B package -DskipTests

      - name: Docker log in to Github Container Registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@a254f8ca60a858f3136a2f1f23a60969f2c402dd
        with:
          context: ./service
          file: ./service/Dockerfile
          push: true
          tags: ghcr.io/sebastian-struecker/simple-feature-toggles/service:${{ env.RELEASE_VERSION }}

  service-test:
    runs-on: ubuntu-latest
    needs: [service-build]
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Maven Test
        working-directory: ./service
        run: ./mvnw -B verify -f ./pom.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  service-security-check:
    runs-on: ubuntu-latest
    needs: [service-build]
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'ghcr.io/sebastian-struecker/simple-feature-toggles/service:${{ env.RELEASE_VERSION }}'
          format: 'sarif'
          limit-severities-for-sarif: true
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  ui-build:
    runs-on: ubuntu-latest
    needs: [get-version]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker log in to Github Container Registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@a254f8ca60a858f3136a2f1f23a60969f2c402dd
        with:
          context: ./ui
          file: ./ui/Dockerfile
          push: true
          tags: ghcr.io/sebastian-struecker/simple-feature-toggles/ui:${{ env.RELEASE_VERSION }}

  ui-security-check:
    runs-on: ubuntu-latest
    needs: [ui-build]
    steps:
      - uses: actions/checkout@v4

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'ghcr.io/sebastian-struecker/simple-feature-toggles/ui:${{ env.RELEASE_VERSION }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  docs-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: npm ci

      - name: Build with VitePress
        run: npm run docs:build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  docs-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: docs-build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
